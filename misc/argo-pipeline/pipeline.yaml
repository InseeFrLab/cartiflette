apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: cartiflette-pipeline-
  namespace: projet-cartiflette
spec:
  entrypoint: main
  serviceAccountName: workflow
  volumeClaimTemplates:
    - metadata:
        name: volume-workflow-tmp
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 10Gi
            
  templates:
    - name: main
      dag:
        tasks:
          - name: duplicate-ign
            template: duplicate-ign
            arguments:
              parameters:
              - name: pathbucket
                value: "test/test-argo"
          - name: test-ign
            template: test-ign
            dependencies: [ duplicate-ign ]
            arguments:
              parameters:
              - name: temporary-files
                value: "test/test-argo"
          - name: crossproduct
            template: crossproduct
            dependencies: [ duplicate-ign ]
          - name: print
            template: print
            dependencies: [ crossproduct ]
            arguments:
              parameters:
              - name: format
                value: "{{item.format}}"
              - name: year
                value: "{{item.year}}"
              - name: crs
                value: "{{item.crs}}"
              - name: source
                value: "{{item.source}}"
              - name: borders
                value: "{{item.borders}}"
              - name: filter_by
                value: "{{item.filter_by}}"
            withParam: "{{tasks.crossproduct.outputs.result}}"

    - name: duplicate-ign
      inputs:
        parameters:
          - name: pathbucket
            value: test/test-argo
        artifacts:
          - name: code
            path: /mnt/bin
            git:
              repo: https://github.com/inseefrlab/cartiflette
              revision: "docker"
      outputs:
        parameters :
          - name: path-temp-bucket
            value: "{{inputs.parameters.pathbucket}}/temp_argo/"
      container:
        image: inseefrlab/cartiflette
        command: [sh, -c]
        args: ["
                mkdir -p /mnt/data ; mkdir -p /mnt/bin/src ;
                mv /mnt/bin/misc/argo-pipeline/src/* /mnt/bin/src ;
                export MC_HOST_s3=https://$AWS_ACCESS_KEY_ID:$AWS_SECRET_ACCESS_KEY@$AWS_S3_ENDPOINT &&
                pwd ;
                python /mnt/bin/src/duplicate_in_bucket.py --path {{inputs.parameters.pathbucket}} ;
                ls temp/ ;
                mv temp/tagc.csv /mnt/data/tagc.csv
                #mc cp -r temp/ s3/projet-cartiflette/{{inputs.parameters.pathbucket}}/temp_argo/
                "]
        volumeMounts:
          - name: volume-workflow-tmp
            mountPath: /mnt
        env:
          - name: PYTHONPATH
            value: "${PYTHONPATH}:/mnt/bin"
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: sa-cartiflette
                key: accessKey
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: sa-cartiflette
                key: secretKey
          - name: AWS_DEFAULT_REGION
            value: us-east-1
          - name: AWS_S3_ENDPOINT
            value: minio.lab.sspcloud.fr

    - name: test-ign
      inputs:
        parameters:
          - name: pathbucket
            value: "test/test-argo"
      container:
        image: inseefrlab/cartiflette
        command: [sh, -c]
        args: ["ls /mnt/data ;
                head -n 1 /mnt/data/tagc.csv ;
                #mc cp s3/projet-cartiflette/test/test-argo/temp_argo/tagc.csv tagc.csv ;
                python code/misc/argo-pipeline/src/enrichissement.py --path /mnt/data/tagc.csv"]
        env:
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: sa-cartiflette
                key: accessKey
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: sa-cartiflette
                key: secretKey
          - name: AWS_DEFAULT_REGION
            value: us-east-1
          - name: AWS_S3_ENDPOINT
            value: minio.lab.sspcloud.fr
        volumeMounts:
          - name: volume-workflow-tmp
            mountPath: /mnt

    - name: crossproduct
      container:
        image: inseefrlab/cartiflette
        command: [sh, -c]
        args: ["python /mnt/bin/src/crossproduct.py"]
    - name: print
      inputs:
        parameters:
        - name: format
        - name: year
        - name: crs
        - name: source
        - name: borders
        - name: filter_by
      container:
        image: alpine:latest
        command: [sh, -c]
        args: ["echo 
                {{inputs.parameters.format}} 
                {{inputs.parameters.year}}
                {{inputs.parameters.crs}}
                {{inputs.parameters.source}}
                {{inputs.parameters.borders}}
                {{inputs.parameters.filter_by}}"]