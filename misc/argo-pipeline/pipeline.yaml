apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: cartiflette-pipeline-
  namespace: projet-cartiflette
spec:
  entrypoint: main
  serviceAccountName: workflow
  volumeClaimTemplates:
    - metadata:
        name: volume-workflow-tmp
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 10Gi


  templates:
    - name: main

  # --------------------------
  # DAG COMPONENTS
  # ---------------------------

      dag:
        tasks:
          - name: duplicate-ign
            template: duplicate-ign
          - name: test-volume
            template: test-volume
            dependencies: [ duplicate-ign ]
          - name: prepare-split-departement
            template: prepare-split-departement
            dependencies: [ duplicate-ign ]
          - name: prepare-split-commune
            template: prepare-split-commune
            dependencies: [ duplicate-ign ]
          - name: split-departement
            template: split-departement
            dependencies: [ prepare-split-departement ]
            arguments:
              parameters:
              - name: format_output
                value: "{{item.format-output}}"
              - name: year
                value: "{{item.year}}"
              - name: crs
                value: "{{item.crs}}"
              - name: source
                value: "{{item.source}}"
              - name: simplification
                value: "{{item.simplification}}"
              - name: level_polygons
                value: "{{item.level-polygons}}"
              - name: filter_by
                value: "{{item.filter-by}}"
            withParam: "{{tasks.prepare-split-departement.outputs.result}}"
          - name: split-commune
            template: split-commune
            dependencies: [ prepare-split-commune ]
            arguments:
              parameters:
              - name: format_output
                value: "{{item.format-output}}"
              - name: year
                value: "{{item.year}}"
              - name: crs
                value: "{{item.crs}}"
              - name: source
                value: "{{item.source}}"
              - name: simplification
                value: "{{item.simplification}}"
              - name: level_polygons
                value: "{{item.level-polygons}}"
              - name: filter_by
                value: "{{item.filter-by}}"
            withParam: "{{tasks.prepare-split-commune.outputs.result}}"

  # --------------------------
  # TEMPLATES DEFINITION
  # ---------------------------


  # First step: retrieving and duplicating IGN tiles ------------------
    - name: duplicate-ign
      inputs:
        artifacts:
          - name: code
            path: /mnt/bin
            git:
              repo: https://github.com/inseefrlab/cartiflette
              revision: "docker"
      container:
        image: inseefrlab/cartiflette
        command: [sh, -c]
        args: ["
                mkdir -p /mnt/data ; mkdir -p /mnt/bin/src ;
                mv /mnt/bin/misc/argo-pipeline/src/* /mnt/bin/src ;
                python /mnt/bin/src/duplicate_in_bucket.py --path $PATH_WRITING_S3 ;
                mv temp/tagc.csv /mnt/data/tagc.csv ;
                "]
        volumeMounts:
          - name: volume-workflow-tmp
            mountPath: /mnt
        env: &env_parameters
          - name: PATH_WRITING_S3
            value: "test/test-argo"
          - name: PYTHONPATH
            value: "${PYTHONPATH}:/mnt/bin"
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: sa-cartiflette
                key: accessKey
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: sa-cartiflette
                key: secretKey
          - name: AWS_DEFAULT_REGION
            value: us-east-1
          - name: AWS_S3_ENDPOINT
            value: minio.lab.sspcloud.fr
          - name: MC_HOST_s3
            value: https://$AWS_ACCESS_KEY_ID:$AWS_SECRET_ACCESS_KEY@$AWS_S3_ENDPOINT

    - name: test-volume
      container:
        image: inseefrlab/cartiflette
        command: [sh, -c]
        args: ["echo $PATH_WRITING_S3 ;
                head -n 1 /mnt/data/tagc.csv"]
        env: *env_parameters
        volumeMounts:
          - name: volume-workflow-tmp
            mountPath: /mnt

  # Step 2: creating geographic levels for splitting ------------------

  # 2.1. DEPARTEMENT
    - name: prepare-split-departement
      container:
        image: inseefrlab/cartiflette
        command: [sh, -c]
        volumeMounts:
          - name: volume-workflow-tmp
            mountPath: /mnt
        args: ["
          python /mnt/bin/src/crossproduct.py --restrictfield 'DEPARTEMENT'"
          ]
    - name: split-departement
      inputs:
        parameters:
        - name: format_output
        - name: year
        - name: crs
        - name: source
        - name: simplification
        - name: level_polygons
        - name: filter_by
      container:
        image: inseefrlab/cartiflette
        command: ["sh", "-c"]
        args: ["
          mkdir -p temp/ && cp /mnt/data/tagc.csv temp/tagc.csv ;
          python /mnt/bin/src/split_merge_tiles.py \
          --path $PATH_WRITING_S3 \
          --format_output {{inputs.parameters.format_output}} \
          --year {{inputs.parameters.year}} \
          --crs {{inputs.parameters.crs}} \
          --source {{inputs.parameters.source}} \
          --simplification {{inputs.parameters.simplification}} \
          --level_polygons {{inputs.parameters.level_polygons}} \
          --filter_by {{inputs.parameters.filter_by}}"
        ]
        volumeMounts:
          - name: volume-workflow-tmp
            mountPath: /mnt
        env: *env_parameters

  # 2.2. COMMUNE
    - name: prepare-split-commune
      container:
        image: inseefrlab/cartiflette
        command: [sh, -c]
        volumeMounts:
          - name: volume-workflow-tmp
            mountPath: /mnt
        args: ["
          python /mnt/bin/src/crossproduct.py --restrictfield 'COMMUNE'"
          ]
    - name: split-commune
      inputs:
        parameters:
        - name: format_output
        - name: year
        - name: crs
        - name: source
        - name: simplification
        - name: level_polygons
        - name: filter_by
      container:
        image: inseefrlab/cartiflette
        command: ["sh", "-c"]
        args: ["
          mkdir -p temp/ && cp /mnt/data/tagc.csv temp/tagc.csv ;
          python /mnt/bin/src/split_merge_tiles.py \
          --path $PATH_WRITING_S3 \
          --format_output {{inputs.parameters.format_output}} \
          --year {{inputs.parameters.year}} \
          --crs {{inputs.parameters.crs}} \
          --source {{inputs.parameters.source}} \
          --simplification {{inputs.parameters.simplification}} \
          --level_polygons {{inputs.parameters.level_polygons}} \
          --filter_by {{inputs.parameters.filter_by}}"
        ]
        volumeMounts:
          - name: volume-workflow-tmp
            mountPath: /mnt
        env: *env_parameters
