apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: cartiflette-pipeline-
spec:
  entrypoint: main
  serviceAccountName: workflow
  volumeClaimTemplates:
    - metadata:
        name: volume-workflow-tmp
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 10Gi
  templates:
    - name: main
      dag:
        tasks:
          - name: crossproduct
            template: crossproduct

          - name: print
            template: print
            dependencies: [ crossproduct ]
            arguments:
              parameters:
              - name: item
                value: "{{item}}"
            withParam: "{{tasks.crossproduct.outputs.result}}"

    - name: crossproduct
      inputs:
        artifacts:
          - name: code
            path: /mnt/bin
            git:
              repo: https://github.com/inseefrlab/cartogether
              revision: "argo-pipeline"
      container:
        image: python:3.9-slim
        command: [sh, -c]
        args: ["mkdir -p /mnt/data ; mkdir -p /mnt/bin/src ; 
                mv /mnt/bin/misc/argo-pipeline/src/* /mnt/bin/src ;
                pip install --quiet -r /mnt/bin/requirements.txt ;
                python /mnt/bin/src/crossproduct.py"]
        volumeMounts:
          - name: volume-workflow-tmp
            mountPath: /mnt
        env:
          - name: PYTHONPATH
            value: "${PYTHONPATH}:/mnt/bin"

    - name: print
      inputs:
        parameters:
        - name: item
      container:
        image: alpine:latest
        command: [sh, -c]
        args: ["echo 
                {{inputs.parameters.item.format}} 
                {{inputs.parameters.item.year}}
                {{inputs.parameters.item.crs}}
                {{inputs.parameters.item.source}}
                {{inputs.parameters.item.official}}
                {{inputs.parameters.item.borders}}
                {{inputs.parameters.item.filter_by}}"]